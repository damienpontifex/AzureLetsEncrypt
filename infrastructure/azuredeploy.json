{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "ponti-certs"
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "prod",
        "dev"
      ],
      "defaultValue": "dev",
      "metadata": {
        "description": "Environment description used with naming resources"
      }
    },
    "dnsZoneName": {
      "type": "string",
      "defaultValue": "damienpontifex.com"
    },
    "dnsZoneResourceGroup": {
      "type": "string",
      "defaultValue": "damienpontifex.com-rg"
    }
  },
  "variables": {
    "suffix": "[if(equals('prod', parameters('environment')), '', uniqueString(resourceGroup().name))]",
    "storageAccountName": "[take(replace(toLower(concat(parameters('appName'), 'storage', variables('suffix'))), '-', ''), 24)]",
    "functionAppName": "[concat(parameters('appName'), '-functions', variables('suffix'))]",
    "appInsightsName": "[concat(parameters('appName'), '-appinsights', variables('suffix'))]",
    "keyVaultName": "[take(concat(parameters('appName'), '-kv', variables('suffix')), 24)]",
    "storageAccountResourceId": "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "functionAppId": "[concat('Microsoft.Web/sites/', variables('functionAppName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "apiVersion": "2019-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components/', variables('appInsightsName'))]"
      ],
      "properties": {
        "reserved": true
      },
      "resources": [
        {
          "type": "config",
          "name": "appsettings",
          "apiVersion": "2019-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
          ],
          "properties": {
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountResourceId'),'2019-04-01').keys[0].value)]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountResourceId'),'2019-04-01').keys[0].value)]",
            "FUNCTIONS_EXTENSION_VERSION": "~2",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]",
            "FUNCTIONS_WORKER_RUNTIME": "python",
            "KEYVAULT_URL": "[concat('https://', variables('keyVaultName'), '.vault.azure.net')]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('appInsightsName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "name": "[variables('keyVaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [
          {
            "tenantId": "[reference(variables('functionAppId'), '2019-08-01', 'Full').identity.tenantId]",
            "objectId": "[reference(variables('functionAppId'), '2019-08-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [ "encrypt", "decrypt", "sign", "create" ],
              "certificates": [ "create", "update" ]
            }
          }
        ]
      }
    },
    {
      "comments": "DNS Zone Contributor for function app managed identity",
      "apiVersion": "2018-05-01",
      "name": "nestedTemplate",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('dnsZoneResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2018-09-01-preview",
              "type": "Microsoft.Network/dnszones/providers/roleAssignments",
              "name": "[concat(parameters('dnsZoneName'), '/Microsoft.Authorization/', guid(uniqueString(variables('functionAppName'))))]",
              "properties": {
                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', 'befefa01-2a29-4197-83a8-272ff33ce314')]",
                "principalId": "[reference(variables('functionAppId'), '2019-08-01', 'Full').identity.principalId]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    }
  }
}
